{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/usuarios`;\n  }\n  // Obtener todos los usuarios\n  getUsuarios() {\n    return this.http.get(this.apiUrl);\n  }\n  // Obtener un usuario por ID\n  getUsuario(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Crear un nuevo usuario\n  crearUsuario(usuario) {\n    return this.http.post(this.apiUrl, usuario);\n  }\n  // Actualizar un usuario existente\n  actualizarUsuario(id, usuario) {\n    return this.http.put(`${this.apiUrl}/${id}`, usuario);\n  }\n  // Eliminar un usuario\n  eliminarUsuario(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function UsuarioService_Factory(t) {\n      return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsuarioService,\n      factory: UsuarioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","UsuarioService","constructor","http","apiUrl","getUsuarios","get","getUsuario","id","crearUsuario","usuario","post","actualizarUsuario","put","eliminarUsuario","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\angel\\JobProjects\\FrontEnd\\gestion-usuarios\\src\\app\\services\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Usuario } from '../models/usuario.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsuarioService {\n  private apiUrl = `${environment.apiUrl}/usuarios`;\n\n  constructor(private http: HttpClient) {}\n\n  // Obtener todos los usuarios\n  getUsuarios(): Observable<Usuario[]> {\n    return this.http.get<Usuario[]>(this.apiUrl);\n  }\n\n  // Obtener un usuario por ID\n  getUsuario(id: number): Observable<Usuario> {\n    return this.http.get<Usuario>(`${this.apiUrl}/${id}`);\n  }\n\n  // Crear un nuevo usuario\n  crearUsuario(usuario: Usuario): Observable<Usuario> {\n    return this.http.post<Usuario>(this.apiUrl, usuario);\n  }\n\n  // Actualizar un usuario existente\n  actualizarUsuario(id: number, usuario: Usuario): Observable<Usuario> {\n    return this.http.put<Usuario>(`${this.apiUrl}/${id}`, usuario);\n  }\n\n  // Eliminar un usuario\n  eliminarUsuario(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,WAAW;EAEV;EAEvC;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEA;EACAG,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEA;EACAC,YAAYA,CAACC,OAAgB;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EACtD;EAEA;EACAE,iBAAiBA,CAACJ,EAAU,EAAEE,OAAgB;IAC5C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;EAChE;EAEA;EACAI,eAAeA,CAACN,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACjD;;;uBA5BWP,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdlB,cAAc;MAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}