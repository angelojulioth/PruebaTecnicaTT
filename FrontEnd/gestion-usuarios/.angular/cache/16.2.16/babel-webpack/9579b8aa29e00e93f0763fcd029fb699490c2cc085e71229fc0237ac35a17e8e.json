{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CargoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/cargos`;\n  }\n  // Obtener todos los cargos\n  getCargos() {\n    return this.http.get(this.apiUrl);\n  }\n  // Obtener un cargo por ID\n  getCargo(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Crear un nuevo cargo\n  crearCargo(cargo) {\n    return this.http.post(this.apiUrl, cargo);\n  }\n  // Actualizar un cargo existente\n  actualizarCargo(id, cargo) {\n    return this.http.put(`${this.apiUrl}/${id}`, cargo);\n  }\n  // Eliminar un cargo\n  eliminarCargo(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function CargoService_Factory(t) {\n      return new (t || CargoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CargoService,\n      factory: CargoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","CargoService","constructor","http","apiUrl","getCargos","get","getCargo","id","crearCargo","cargo","post","actualizarCargo","put","eliminarCargo","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\angel\\JobProjects\\FrontEnd\\gestion-usuarios\\src\\app\\services\\cargo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cargo } from '../models/cargo.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CargoService {\n  private apiUrl = `${environment.apiUrl}/cargos`;\n\n  constructor(private http: HttpClient) {}\n\n  // Obtener todos los cargos\n  getCargos(): Observable<Cargo[]> {\n    return this.http.get<Cargo[]>(this.apiUrl);\n  }\n\n  // Obtener un cargo por ID\n  getCargo(id: number): Observable<Cargo> {\n    return this.http.get<Cargo>(`${this.apiUrl}/${id}`);\n  }\n\n  // Crear un nuevo cargo\n  crearCargo(cargo: Cargo): Observable<Cargo> {\n    return this.http.post<Cargo>(this.apiUrl, cargo);\n  }\n\n  // Actualizar un cargo existente\n  actualizarCargo(id: number, cargo: Cargo): Observable<Cargo> {\n    return this.http.put<Cargo>(`${this.apiUrl}/${id}`, cargo);\n  }\n\n  // Eliminar un cargo\n  eliminarCargo(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,SAAS;EAER;EAEvC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEA;EACAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrD;EAEA;EACAC,UAAUA,CAACC,KAAY;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAClD;EAEA;EACAE,eAAeA,CAACJ,EAAU,EAAEE,KAAY;IACtC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,KAAK,CAAC;EAC5D;EAEA;EACAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACjD;;;uBA5BWP,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZlB,YAAY;MAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}